{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavlink_ivory.py

module SMACCMPilot.Mavlink.Messages.Debug where

import SMACCMPilot.Mavlink.Pack
import SMACCMPilot.Mavlink.Unpack
import SMACCMPilot.Mavlink.Send

import Ivory.Language

debugMsgId :: Uint8
debugMsgId = 254

debugCrcExtra :: Uint8
debugCrcExtra = 46

debugModule :: Module
debugModule = package "mavlink_debug_msg" $ do
  depend packModule
  incl debugUnpack
  defStruct (Proxy :: Proxy "debug_msg")

[ivory|
struct debug_msg
  { time_boot_ms :: Stored Uint32
  ; value :: Stored IFloat
  ; ind :: Stored Uint8
  }
|]

mkDebugSender :: SizedMavlinkSender 9
                       -> Def ('[ ConstRef s (Struct "debug_msg") ] :-> ())
mkDebugSender sender =
  proc ("mavlink_debug_msg_send" ++ (senderName sender)) $ \msg -> body $ do
    debugPack (senderMacro sender) msg

instance MavlinkSendable "debug_msg" 9 where
  mkSender = mkDebugSender

debugPack :: (eff `AllocsIn` s, eff `Returns` ())
                  => SenderMacro eff s 9
                  -> ConstRef s1 (Struct "debug_msg")
                  -> Ivory eff ()
debugPack sender msg = do
  arr <- local (iarray [] :: Init (Array 9 (Stored Uint8)))
  let buf = toCArray arr
  call_ pack buf 0 =<< deref (msg ~> time_boot_ms)
  call_ pack buf 4 =<< deref (msg ~> value)
  call_ pack buf 8 =<< deref (msg ~> ind)
  sender debugMsgId (constRef arr) debugCrcExtra
  retVoid

instance MavlinkUnpackableMsg "debug_msg" where
    unpackMsg = ( debugUnpack , debugMsgId )

debugUnpack :: Def ('[ Ref s1 (Struct "debug_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
debugUnpack = proc "mavlink_debug_unpack" $ \ msg buf -> body $ do
  store (msg ~> time_boot_ms) =<< call unpack buf 0
  store (msg ~> value) =<< call unpack buf 4
  store (msg ~> ind) =<< call unpack buf 8

