{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.LocalPositionSetpoint where

import SMACCMPilot.Mavlink.Pack
import SMACCMPilot.Mavlink.Unpack
import SMACCMPilot.Mavlink.Send

import Ivory.Language

localPositionSetpointMsgId :: Uint8
localPositionSetpointMsgId = 51

localPositionSetpointCrcExtra :: Uint8
localPositionSetpointCrcExtra = 223

localPositionSetpointModule :: Module
localPositionSetpointModule = package "mavlink_local_position_setpoint_msg" $ do
  depend packModule
  incl localPositionSetpointUnpack
  defStruct (Proxy :: Proxy "local_position_setpoint_msg")

[ivory|
struct local_position_setpoint_msg
  { x :: Stored IFloat
  ; y :: Stored IFloat
  ; z :: Stored IFloat
  ; yaw :: Stored IFloat
  ; coordinate_frame :: Stored Uint8
  }
|]

mkLocalPositionSetpointSender :: SizedMavlinkSender 17
                       -> Def ('[ ConstRef s (Struct "local_position_setpoint_msg") ] :-> ())
mkLocalPositionSetpointSender sender =
  proc ("mavlink_local_position_setpoint_msg_send" ++ (senderName sender)) $ \msg -> body $ do
    localPositionSetpointPack (senderMacro sender) msg

instance MavlinkSendable "local_position_setpoint_msg" 17 where
  mkSender = mkLocalPositionSetpointSender

localPositionSetpointPack :: (eff `AllocsIn` s, eff `Returns` ())
                  => SenderMacro eff s 17
                  -> ConstRef s1 (Struct "local_position_setpoint_msg")
                  -> Ivory eff ()
localPositionSetpointPack sender msg = do
  arr <- local (iarray [] :: Init (Array 17 (Stored Uint8)))
  let buf = toCArray arr
  call_ pack buf 0 =<< deref (msg ~> x)
  call_ pack buf 4 =<< deref (msg ~> y)
  call_ pack buf 8 =<< deref (msg ~> z)
  call_ pack buf 12 =<< deref (msg ~> yaw)
  call_ pack buf 16 =<< deref (msg ~> coordinate_frame)
  sender localPositionSetpointMsgId (constRef arr) localPositionSetpointCrcExtra
  retVoid

instance MavlinkUnpackableMsg "local_position_setpoint_msg" where
    unpackMsg = ( localPositionSetpointUnpack , localPositionSetpointMsgId )

localPositionSetpointUnpack :: Def ('[ Ref s1 (Struct "local_position_setpoint_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
localPositionSetpointUnpack = proc "mavlink_local_position_setpoint_unpack" $ \ msg buf -> body $ do
  store (msg ~> x) =<< call unpack buf 0
  store (msg ~> y) =<< call unpack buf 4
  store (msg ~> z) =<< call unpack buf 8
  store (msg ~> yaw) =<< call unpack buf 12
  store (msg ~> coordinate_frame) =<< call unpack buf 16

