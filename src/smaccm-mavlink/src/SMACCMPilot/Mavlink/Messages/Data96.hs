{-# LANGUAGE DataKinds #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE QuasiQuotes #-}
{-# LANGUAGE MultiParamTypeClasses #-}

-- Autogenerated Mavlink v1.0 implementation: see smavgen_ivory.py

module SMACCMPilot.Mavlink.Messages.Data96 where

import SMACCMPilot.Mavlink.Pack
import SMACCMPilot.Mavlink.Unpack
import SMACCMPilot.Mavlink.Send

import Ivory.Language

data96MsgId :: Uint8
data96MsgId = 172

data96CrcExtra :: Uint8
data96CrcExtra = 185

data96Module :: Module
data96Module = package "mavlink_data96_msg" $ do
  depend packModule
  incl data96Unpack
  defStruct (Proxy :: Proxy "data96_msg")

[ivory|
struct data96_msg
  { data96_type :: Stored Uint8
  ; len :: Stored Uint8
  ; data96 :: Array 96 (Stored Uint8)
  }
|]

mkData96Sender :: SizedMavlinkSender 98
                       -> Def ('[ ConstRef s (Struct "data96_msg") ] :-> ())
mkData96Sender sender =
  proc ("mavlink_data96_msg_send" ++ (senderName sender)) $ \msg -> body $ do
    data96Pack (senderMacro sender) msg

instance MavlinkSendable "data96_msg" 98 where
  mkSender = mkData96Sender

data96Pack :: (eff `AllocsIn` s, eff `Returns` ())
                  => SenderMacro eff s 98
                  -> ConstRef s1 (Struct "data96_msg")
                  -> Ivory eff ()
data96Pack sender msg = do
  arr <- local (iarray [] :: Init (Array 98 (Stored Uint8)))
  let buf = toCArray arr
  call_ pack buf 0 =<< deref (msg ~> data96_type)
  call_ pack buf 1 =<< deref (msg ~> len)
  arrayPack buf 2 (msg ~> data96)
  sender data96MsgId (constRef arr) data96CrcExtra
  retVoid

instance MavlinkUnpackableMsg "data96_msg" where
    unpackMsg = ( data96Unpack , data96MsgId )

data96Unpack :: Def ('[ Ref s1 (Struct "data96_msg")
                             , ConstRef s2 (CArray (Stored Uint8))
                             ] :-> () )
data96Unpack = proc "mavlink_data96_unpack" $ \ msg buf -> body $ do
  store (msg ~> data96_type) =<< call unpack buf 0
  store (msg ~> len) =<< call unpack buf 1
  arrayUnpack buf 2 (msg ~> data96)

